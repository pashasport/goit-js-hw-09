{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,KAAMF,SAASC,cAAc,aAC7BE,MAAOH,SAASC,cAAc,kBAC9BG,KAAMJ,SAASC,cAAc,iBAC7BI,OAAQL,SAASC,cAAc,oBAEjCH,EAAKC,KAAKO,MAAMC,gBAAkB,UAElCT,EAAKI,KAAKM,iBAAiB,SAS3B,SAAyBC,GACvBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOd,EAAKK,MAAMU,OAC1BT,EAAOQ,OAAOd,EAAKM,KAAKS,OACxBR,EAASO,OAAOd,EAAKO,OAAOQ,OAEhC,IAAK,IAAIC,EAAW,EAAGA,GAAYT,EAAQS,GAAY,EACrDC,EAAcD,EAAUH,GACrBK,MAAK,EAACC,SAAEA,EAAQd,MAAEA,MACjBe,EAAAtB,GAASuB,OAAOC,QACd,uBAAqBH,QAAiBd,MAAWkB,EAC/C,IAGLC,OAAM,EAACL,SAAEA,EAAQd,MAAEA,MAClBe,EAAAtB,GAASuB,OAAOI,QACd,sBAAoBN,QAAed,MAAWkB,EAC9C,IAGNV,GAASP,EACToB,YAAW,KACTf,EAAEgB,OAAOvB,KAAKwB,OAAO,GACpBf,EAAQP,E,IAhCf,MAAMiB,EAAY,CAChBM,MAAO,QACPC,aAAc,OACdC,SAAU,OACVC,kBAAmB,OACnBC,qBAAsB,UA+BxB,SAAShB,EAAcE,EAAUd,GAC/B,OAAO,IAAI6B,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCb,YAAW,KACLW,EACFF,EAAQ,C,SAAEhB,E,MAAUd,IAEpB+B,EAAO,C,SAAEjB,E,MAAUd,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  body: document.querySelector('body'),\n  form: document.querySelector('form.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\nrefs.body.style.backgroundColor = '#dedeaf';\n\nrefs.form.addEventListener('click', onPromiseCreate);\nconst positions = {\n  width: '360px',\n  borderRadius: '24px',\n  distance: '14px',\n  cssAnimationStyle: 'fade',\n  fontAwesomeIconStyle: 'shadow',\n};\n\nfunction onPromiseCreate(e) {\n  e.preventDefault();\n\n  let delay = Number(refs.delay.value);\n  let step = Number(refs.step.value);\n  let amount = Number(refs.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          positions\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          positions\n        );\n      });\n    delay += step;\n    setTimeout(() => {\n      e.target.form.reset();\n    }, delay - step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","body","document","querySelector","form","delay","step","amount","style","backgroundColor","addEventListener","e","preventDefault","delay1","Number","value","position1","$47d4ff9957288465$var$createPromise","then","position","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$positions","catch","failure","setTimeout","target","reset","width","borderRadius","distance","cssAnimationStyle","fontAwesomeIconStyle","Promise","resolve","reject","shouldResolve","Math","random"],"version":3,"file":"03-promises.7ec0c8b0.js.map"}